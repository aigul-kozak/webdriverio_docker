name: WDIO E2E Tests

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox, edge]

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t wdio-telnyx .

      - name: Prepare folders
        run: |
          mkdir -p ${{ github.workspace }}/results/${{ matrix.browser }}
          mkdir -p ${{ github.workspace }}/reports/${{ matrix.browser }}

      - name: Check EdgeDriver availability
        if: matrix.browser == 'edge'
        run: |
          if ! docker run --rm wdio-telnyx sh -c "curl -sSf https://msedgedriver.azureedge.net" >/dev/null; then
            echo "EdgeDriver unavailable, fallback to Chrome"
            echo "FALLBACK_BROWSER=chrome" >> $GITHUB_ENV
          fi

      - name: Run tests in Docker
        run: |
          BROWSER=${{ env.FALLBACK_BROWSER || matrix.browser }}
          docker run --rm \
            -e BROWSER=$BROWSER \
            -v ${{ github.workspace }}/results/${{ matrix.browser }}:/usr/src/app/allure-results \
            wdio-telnyx

      - name: List Allure results (debug)
        run: |
          echo ">>> Listing contents of results folder:"
          ls -lR results/${{ matrix.browser }}

      - name: Install Allure CLI
        run: npm install -g allure-commandline --save-dev

      - name: Generate Allure HTML report
        run: |
          echo ">>> Generating Allure report from results/${{ matrix.browser }}"
          npx allure generate results/${{ matrix.browser }} --clean -o reports/${{ matrix.browser }}

      - name: List generated Allure report (debug)
        run: |
          echo ">>> Listing contents of generated report folder:"
          ls -lR reports/${{ matrix.browser }}

      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.browser }}
          path: reports/${{ matrix.browser }}

  deploy:
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      # Скачиваем все артефакты в ./reports
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./reports
          merge-multiple: true

      # Проверяем содержимое перед деплоем
      - name: List reports folder before deploy
        run: ls -lR ./reports

      # Создаём индекс с динамическими ссылками
      - name: Create root index.html
        run: |
          cat > ./reports/index.html <<'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <title>Allure Reports</title>
            <style>
              body { font-family: Arial, sans-serif; background: #f5f7fa; margin: 0; padding: 20px; }
              h1 { text-align: center; color: #333; }
              ul { list-style: none; padding: 0; max-width: 400px; margin: 40px auto; }
              li { margin: 15px 0; }
              a { display: flex; align-items: center; padding: 12px 18px; background: white;
                  border-radius: 10px; text-decoration: none; font-size: 18px; color: #333;
                  box-shadow: 0 2px 6px rgba(0,0,0,0.1); transition: 0.2s; }
              a:hover { background: #eef3ff; transform: translateY(-2px); }
            </style>
          </head>
          <body>
            <h1>Allure Reports</h1>
            <ul>
          EOF

          # Генерируем ссылки только для существующих папок
          for browser in chrome firefox edge; do
            if [ -d "./reports/$browser" ]; then
              echo "  <li><a href=\"$browser/index.html\">${browser^} Report</a></li>" >> ./reports/index.html
            fi
          done

          # Закрываем html
          echo "  </ul></body></html>" >> ./reports/index.html

      # Деплой на gh-pages
      - name: Deploy Allure reports to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./reports
          keep_files: false
