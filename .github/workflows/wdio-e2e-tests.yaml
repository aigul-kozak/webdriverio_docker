name: WDIO E2E Tests

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox, edge]

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t wdio-telnyx .

      - name: Prepare folders
        run: |
          mkdir -p ${{ github.workspace }}/results/${{ matrix.browser }}
          mkdir -p ${{ github.workspace }}/reports/${{ matrix.browser }}

      - name: Check EdgeDriver availability
        if: matrix.browser == 'edge'
        run: |
          if ! docker run --rm wdio-telnyx sh -c "curl -sSf https://msedgedriver.azureedge.net" >/dev/null; then
            echo "EdgeDriver unavailable, fallback to Chrome"
            echo "FALLBACK_BROWSER=chrome" >> $GITHUB_ENV
          fi

      - name: Run tests in Docker
        run: |
          BROWSER=${{ env.FALLBACK_BROWSER || matrix.browser }}
          docker run --rm \
            -e BROWSER=$BROWSER \
            -e ALLURE_RESULTS=/usr/src/app/allure-results \
            -v ${{ github.workspace }}/results/${{ matrix.browser }}:/usr/src/app/allure-results \
            wdio-telnyx

      - name: List Allure results (debug)
        run: |
          echo ">>> Listing contents of results folder:"
          ls -lR results/${{ matrix.browser }}

      - name: Install Allure CLI
        run: npm install -g allure-commandline --save-dev

      - name: Generate Allure HTML report
        run: |
          echo ">>> Generating Allure report from results/${{ matrix.browser }}"
          npx allure generate results/${{ matrix.browser }} --clean -o reports/${{ matrix.browser }}

      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.browser }}
          path: reports/${{ matrix.browser }}

  deploy:
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      # Download all artifacts into ./reports
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./reports
          merge-multiple: false

      # Deploy Allure reports to GitHub Pages
      - name: Deploy Allure reports to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./reports
          keep_files: false
