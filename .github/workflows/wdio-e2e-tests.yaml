name: WDIO E2E Tests

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox, edge]

    services:
      selenium-chrome:
        image: selenium/standalone-chrome:134.0-20250323
        ports:
          - 4444:4444
        options: >-
          --health-cmd "curl -f http://localhost:4444/wd/hub/status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      selenium-firefox:
        image: selenium/standalone-firefox:134.0-20250323
        ports:
          - 4445:4444
        options: >-
          --health-cmd "curl -f http://localhost:4444/wd/hub/status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      selenium-edge:
        image: selenium/standalone-edge:134.0-20250323
        ports:
          - 4446:4444
        options: >-
          --health-cmd "curl -f http://localhost:4444/wd/hub/status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Build Node.js test image
        run: docker build -t wdio-telnyx .

      - name: Prepare result folders
        run: |
          mkdir -p ${{ github.workspace }}/results/${{ matrix.browser }}
          mkdir -p ${{ github.workspace }}/reports/${{ matrix.browser }}

      - name: Run WDIO tests in Docker
        run: |
          echo ">>> Running E2E tests in ${{ matrix.browser }}"
          SELENIUM_HOST="selenium-${{ matrix.browser }}"
          SELENIUM_PORT=4444
          docker run --rm \
            -e BROWSER=${{ matrix.browser }} \
            -e BASE_URL=https://telnyx.com \
            -e SELENIUM_HOST=$SELENIUM_HOST \
            -e SELENIUM_PORT=$SELENIUM_PORT \
            -v ${{ github.workspace }}/results/${{ matrix.browser }}:/usr/src/app/allure-results \
            wdio-telnyx

      - name: Install Allure CLI
        run: npm install -g allure-commandline --save-dev

      - name: Generate Allure HTML report
        run: |
          echo ">>> Generating Allure report for ${{ matrix.browser }}"
          npx allure generate results/${{ matrix.browser }} --clean -o reports/${{ matrix.browser }}

      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ matrix.browser }}
          path: reports/${{ matrix.browser }}
